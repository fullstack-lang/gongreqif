// generated by stacks/gong/go/models/orm_file_per_struct_back_repo.go
package orm

import (
	"database/sql"
	"encoding/json"
	"errors"
	"fmt"
	"io/ioutil"
	"log"
	"os"
	"path/filepath"
	"sort"
	"time"

	"gorm.io/gorm"

	"github.com/tealeg/xlsx/v3"

	"github.com/fullstack-lang/gongreqif/go/db"
	"github.com/fullstack-lang/gongreqif/go/models"
)

// dummy variable to have the import declaration wihthout compile failure (even if no code needing this import is generated)
var dummy_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry_sql sql.NullBool
var dummy_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry_time time.Duration
var dummy_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry_sort sort.Float64Slice

// Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryAPI is the input in POST API
//
// for POST, API, one needs the fields of the model as well as the fields
// from associations ("Has One" and "Has Many") that are generated to
// fullfill the ORM requirements for associations
//
// swagger:model map_attribute_definition_boolean_showinsubjectentryAPI
type Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryAPI struct {
	gorm.Model

	models.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry_WOP

	// encoding of pointers
	// for API, it cannot be embedded
	Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPointersEncoding Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPointersEncoding
}

// Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPointersEncoding encodes pointers to Struct and
// reverse pointers of slice of poitners to Struct
type Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPointersEncoding struct {
	// insertion for pointer fields encoding declaration
}

// Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB describes a map_attribute_definition_boolean_showinsubjectentry in the database
//
// It incorporates the GORM ID, basic fields from the model (because they can be serialized),
// the encoded version of pointers
//
// swagger:model map_attribute_definition_boolean_showinsubjectentryDB
type Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB struct {
	gorm.Model

	// insertion for basic fields declaration

	// Declation for basic field map_attribute_definition_boolean_showinsubjectentryDB.Name
	Name_Data sql.NullString

	// Declation for basic field map_attribute_definition_boolean_showinsubjectentryDB.Value
	// provide the sql storage for the boolan
	Value_Data sql.NullBool

	// encoding of pointers
	// for GORM serialization, it is necessary to embed to Pointer Encoding declaration
	Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPointersEncoding
}

// Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBs arrays map_attribute_definition_boolean_showinsubjectentryDBs
// swagger:response map_attribute_definition_boolean_showinsubjectentryDBsResponse
type Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBs []Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB

// Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBResponse provides response
// swagger:response map_attribute_definition_boolean_showinsubjectentryDBResponse
type Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBResponse struct {
	Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB
}

// Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryWOP is a Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry without pointers (WOP is an acronym for "Without Pointers")
// it holds the same basic fields but pointers are encoded into uint
type Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryWOP struct {
	ID int `xlsx:"0"`

	// insertion for WOP basic fields

	Name string `xlsx:"1"`

	Value bool `xlsx:"2"`
	// insertion for WOP pointer fields
}

var Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry_Fields = []string{
	// insertion for WOP basic fields
	"ID",
	"Name",
	"Value",
}

type BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct struct {
	// stores Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB according to their gorm ID
	Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB map[uint]*Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB

	// stores Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB ID according to Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry address
	Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID map[*models.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry]uint

	// stores Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry according to their gorm ID
	Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr map[uint]*models.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry

	db db.DBInterface

	stage *models.Stage
}

func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) GetStage() (stage *models.Stage) {
	stage = backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.stage
	return
}

func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) GetDB() db.DBInterface {
	return backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.db
}

// GetMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBFromMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr is a handy function to access the back repo instance from the stage instance
func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) GetMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBFromMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr(map_attribute_definition_boolean_showinsubjectentry *models.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry) (map_attribute_definition_boolean_showinsubjectentryDB *Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB) {
	id := backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID[map_attribute_definition_boolean_showinsubjectentry]
	map_attribute_definition_boolean_showinsubjectentryDB = backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB[id]
	return
}

// BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.CommitPhaseOne commits all staged instances of Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry to the BackRepo
// Phase One is the creation of instance in the database if it is not yet done to get the unique ID for each staged instance
func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) CommitPhaseOne(stage *models.Stage) (Error error) {

	var map_attribute_definition_boolean_showinsubjectentrys []*models.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry
	for map_attribute_definition_boolean_showinsubjectentry := range stage.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntrys {
		map_attribute_definition_boolean_showinsubjectentrys = append(map_attribute_definition_boolean_showinsubjectentrys, map_attribute_definition_boolean_showinsubjectentry)
	}

	// Sort by the order stored in Map_Staged_Order.
	sort.Slice(map_attribute_definition_boolean_showinsubjectentrys, func(i, j int) bool {
		return stage.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryMap_Staged_Order[map_attribute_definition_boolean_showinsubjectentrys[i]] < stage.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryMap_Staged_Order[map_attribute_definition_boolean_showinsubjectentrys[j]]
	})

	for _, map_attribute_definition_boolean_showinsubjectentry := range map_attribute_definition_boolean_showinsubjectentrys {
		backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.CommitPhaseOneInstance(map_attribute_definition_boolean_showinsubjectentry)
	}

	// parse all backRepo instance and checks wether some instance have been unstaged
	// in this case, remove them from the back repo
	for id, map_attribute_definition_boolean_showinsubjectentry := range backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr {
		if _, ok := stage.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntrys[map_attribute_definition_boolean_showinsubjectentry]; !ok {
			backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.CommitDeleteInstance(id)
		}
	}

	return
}

// BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.CommitDeleteInstance commits deletion of Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry to the BackRepo
func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) CommitDeleteInstance(id uint) (Error error) {

	map_attribute_definition_boolean_showinsubjectentry := backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr[id]

	// map_attribute_definition_boolean_showinsubjectentry is not staged anymore, remove map_attribute_definition_boolean_showinsubjectentryDB
	map_attribute_definition_boolean_showinsubjectentryDB := backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB[id]
	db, _ := backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.db.Unscoped()
	_, err := db.Delete(map_attribute_definition_boolean_showinsubjectentryDB)
	if err != nil {
		log.Fatal(err)
	}

	// update stores
	delete(backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID, map_attribute_definition_boolean_showinsubjectentry)
	delete(backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr, id)
	delete(backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB, id)

	return
}

// BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.CommitPhaseOneInstance commits map_attribute_definition_boolean_showinsubjectentry staged instances of Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry to the BackRepo
// Phase One is the creation of instance in the database if it is not yet done to get the unique ID for each staged instance
func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) CommitPhaseOneInstance(map_attribute_definition_boolean_showinsubjectentry *models.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry) (Error error) {

	// check if the map_attribute_definition_boolean_showinsubjectentry is not commited yet
	if _, ok := backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID[map_attribute_definition_boolean_showinsubjectentry]; ok {
		return
	}

	// initiate map_attribute_definition_boolean_showinsubjectentry
	var map_attribute_definition_boolean_showinsubjectentryDB Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB
	map_attribute_definition_boolean_showinsubjectentryDB.CopyBasicFieldsFromMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry(map_attribute_definition_boolean_showinsubjectentry)

	_, err := backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.db.Create(&map_attribute_definition_boolean_showinsubjectentryDB)
	if err != nil {
		log.Fatal(err)
	}

	// update stores
	backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID[map_attribute_definition_boolean_showinsubjectentry] = map_attribute_definition_boolean_showinsubjectentryDB.ID
	backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr[map_attribute_definition_boolean_showinsubjectentryDB.ID] = map_attribute_definition_boolean_showinsubjectentry
	backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB[map_attribute_definition_boolean_showinsubjectentryDB.ID] = &map_attribute_definition_boolean_showinsubjectentryDB

	return
}

// BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.CommitPhaseTwo commits all staged instances of Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry to the BackRepo
// Phase Two is the update of instance with the field in the database
func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) CommitPhaseTwo(backRepo *BackRepoStruct) (Error error) {

	for idx, map_attribute_definition_boolean_showinsubjectentry := range backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr {
		backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.CommitPhaseTwoInstance(backRepo, idx, map_attribute_definition_boolean_showinsubjectentry)
	}

	return
}

// BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.CommitPhaseTwoInstance commits {{structname }} of models.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry to the BackRepo
// Phase Two is the update of instance with the field in the database
func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) CommitPhaseTwoInstance(backRepo *BackRepoStruct, idx uint, map_attribute_definition_boolean_showinsubjectentry *models.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry) (Error error) {

	// fetch matching map_attribute_definition_boolean_showinsubjectentryDB
	if map_attribute_definition_boolean_showinsubjectentryDB, ok := backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB[idx]; ok {

		map_attribute_definition_boolean_showinsubjectentryDB.CopyBasicFieldsFromMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry(map_attribute_definition_boolean_showinsubjectentry)

		// insertion point for translating pointers encodings into actual pointers
		_, err := backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.db.Save(map_attribute_definition_boolean_showinsubjectentryDB)
		if err != nil {
			log.Fatal(err)
		}

	} else {
		err := errors.New(
			fmt.Sprintf("Unkown Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry intance %s", map_attribute_definition_boolean_showinsubjectentry.Name))
		return err
	}

	return
}

// BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.CheckoutPhaseOne Checkouts all BackRepo instances to the Stage
//
// Phase One will result in having instances on the stage aligned with the back repo
// pointers are not initialized yet (this is for phase two)
func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) CheckoutPhaseOne() (Error error) {

	map_attribute_definition_boolean_showinsubjectentryDBArray := make([]Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB, 0)
	_, err := backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.db.Find(&map_attribute_definition_boolean_showinsubjectentryDBArray)
	if err != nil {
		return err
	}

	// list of instances to be removed
	// start from the initial map on the stage and remove instances that have been checked out
	map_attribute_definition_boolean_showinsubjectentryInstancesToBeRemovedFromTheStage := make(map[*models.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry]any)
	for key, value := range backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.stage.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntrys {
		map_attribute_definition_boolean_showinsubjectentryInstancesToBeRemovedFromTheStage[key] = value
	}

	// copy orm objects to the the map
	for _, map_attribute_definition_boolean_showinsubjectentryDB := range map_attribute_definition_boolean_showinsubjectentryDBArray {
		backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.CheckoutPhaseOneInstance(&map_attribute_definition_boolean_showinsubjectentryDB)

		// do not remove this instance from the stage, therefore
		// remove instance from the list of instances to be be removed from the stage
		map_attribute_definition_boolean_showinsubjectentry, ok := backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr[map_attribute_definition_boolean_showinsubjectentryDB.ID]
		if ok {
			delete(map_attribute_definition_boolean_showinsubjectentryInstancesToBeRemovedFromTheStage, map_attribute_definition_boolean_showinsubjectentry)
		}
	}

	// remove from stage and back repo's 3 maps all map_attribute_definition_boolean_showinsubjectentrys that are not in the checkout
	for map_attribute_definition_boolean_showinsubjectentry := range map_attribute_definition_boolean_showinsubjectentryInstancesToBeRemovedFromTheStage {
		map_attribute_definition_boolean_showinsubjectentry.Unstage(backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.GetStage())

		// remove instance from the back repo 3 maps
		map_attribute_definition_boolean_showinsubjectentryID := backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID[map_attribute_definition_boolean_showinsubjectentry]
		delete(backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID, map_attribute_definition_boolean_showinsubjectentry)
		delete(backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB, map_attribute_definition_boolean_showinsubjectentryID)
		delete(backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr, map_attribute_definition_boolean_showinsubjectentryID)
	}

	return
}

// CheckoutPhaseOneInstance takes a map_attribute_definition_boolean_showinsubjectentryDB that has been found in the DB, updates the backRepo and stages the
// models version of the map_attribute_definition_boolean_showinsubjectentryDB
func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) CheckoutPhaseOneInstance(map_attribute_definition_boolean_showinsubjectentryDB *Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB) (Error error) {

	map_attribute_definition_boolean_showinsubjectentry, ok := backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr[map_attribute_definition_boolean_showinsubjectentryDB.ID]
	if !ok {
		map_attribute_definition_boolean_showinsubjectentry = new(models.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry)

		backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr[map_attribute_definition_boolean_showinsubjectentryDB.ID] = map_attribute_definition_boolean_showinsubjectentry
		backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID[map_attribute_definition_boolean_showinsubjectentry] = map_attribute_definition_boolean_showinsubjectentryDB.ID

		// append model store with the new element
		map_attribute_definition_boolean_showinsubjectentry.Name = map_attribute_definition_boolean_showinsubjectentryDB.Name_Data.String
		map_attribute_definition_boolean_showinsubjectentry.Stage(backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.GetStage())
	}
	map_attribute_definition_boolean_showinsubjectentryDB.CopyBasicFieldsToMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry(map_attribute_definition_boolean_showinsubjectentry)

	// in some cases, the instance might have been unstaged. It is necessary to stage it again
	map_attribute_definition_boolean_showinsubjectentry.Stage(backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.GetStage())

	// preserve pointer to map_attribute_definition_boolean_showinsubjectentryDB. Otherwise, pointer will is recycled and the map of pointers
	// Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB)[map_attribute_definition_boolean_showinsubjectentryDB hold variable pointers
	map_attribute_definition_boolean_showinsubjectentryDB_Data := *map_attribute_definition_boolean_showinsubjectentryDB
	preservedPtrToMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry := &map_attribute_definition_boolean_showinsubjectentryDB_Data
	backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB[map_attribute_definition_boolean_showinsubjectentryDB.ID] = preservedPtrToMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry

	return
}

// BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.CheckoutPhaseTwo Checkouts all staged instances of Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry to the BackRepo
// Phase Two is the update of instance with the field in the database
func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) CheckoutPhaseTwo(backRepo *BackRepoStruct) (Error error) {

	// parse all DB instance and update all pointer fields of the translated models instance
	for _, map_attribute_definition_boolean_showinsubjectentryDB := range backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB {
		backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.CheckoutPhaseTwoInstance(backRepo, map_attribute_definition_boolean_showinsubjectentryDB)
	}
	return
}

// BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.CheckoutPhaseTwoInstance Checkouts staged instances of Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry to the BackRepo
// Phase Two is the update of instance with the field in the database
func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) CheckoutPhaseTwoInstance(backRepo *BackRepoStruct, map_attribute_definition_boolean_showinsubjectentryDB *Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB) (Error error) {

	map_attribute_definition_boolean_showinsubjectentry := backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr[map_attribute_definition_boolean_showinsubjectentryDB.ID]

	map_attribute_definition_boolean_showinsubjectentryDB.DecodePointers(backRepo, map_attribute_definition_boolean_showinsubjectentry)

	return
}

func (map_attribute_definition_boolean_showinsubjectentryDB *Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB) DecodePointers(backRepo *BackRepoStruct, map_attribute_definition_boolean_showinsubjectentry *models.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry) {

	// insertion point for checkout of pointer encoding
	return
}

// CommitMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry allows commit of a single map_attribute_definition_boolean_showinsubjectentry (if already staged)
func (backRepo *BackRepoStruct) CommitMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry(map_attribute_definition_boolean_showinsubjectentry *models.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry) {
	backRepo.BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.CommitPhaseOneInstance(map_attribute_definition_boolean_showinsubjectentry)
	if id, ok := backRepo.BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID[map_attribute_definition_boolean_showinsubjectentry]; ok {
		backRepo.BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.CommitPhaseTwoInstance(backRepo, id, map_attribute_definition_boolean_showinsubjectentry)
	}
	backRepo.CommitFromBackNb = backRepo.CommitFromBackNb + 1
}

// CommitMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry allows checkout of a single map_attribute_definition_boolean_showinsubjectentry (if already staged and with a BackRepo id)
func (backRepo *BackRepoStruct) CheckoutMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry(map_attribute_definition_boolean_showinsubjectentry *models.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry) {
	// check if the map_attribute_definition_boolean_showinsubjectentry is staged
	if _, ok := backRepo.BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID[map_attribute_definition_boolean_showinsubjectentry]; ok {

		if id, ok := backRepo.BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID[map_attribute_definition_boolean_showinsubjectentry]; ok {
			var map_attribute_definition_boolean_showinsubjectentryDB Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB
			map_attribute_definition_boolean_showinsubjectentryDB.ID = id

			if _, err := backRepo.BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.db.First(&map_attribute_definition_boolean_showinsubjectentryDB, id); err != nil {
				log.Fatalln("CheckoutMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry : Problem with getting object with id:", id)
			}
			backRepo.BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.CheckoutPhaseOneInstance(&map_attribute_definition_boolean_showinsubjectentryDB)
			backRepo.BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.CheckoutPhaseTwoInstance(backRepo, &map_attribute_definition_boolean_showinsubjectentryDB)
		}
	}
}

// CopyBasicFieldsFromMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry
func (map_attribute_definition_boolean_showinsubjectentryDB *Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB) CopyBasicFieldsFromMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry(map_attribute_definition_boolean_showinsubjectentry *models.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry) {
	// insertion point for fields commit

	map_attribute_definition_boolean_showinsubjectentryDB.Name_Data.String = map_attribute_definition_boolean_showinsubjectentry.Name
	map_attribute_definition_boolean_showinsubjectentryDB.Name_Data.Valid = true

	map_attribute_definition_boolean_showinsubjectentryDB.Value_Data.Bool = map_attribute_definition_boolean_showinsubjectentry.Value
	map_attribute_definition_boolean_showinsubjectentryDB.Value_Data.Valid = true
}

// CopyBasicFieldsFromMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry_WOP
func (map_attribute_definition_boolean_showinsubjectentryDB *Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB) CopyBasicFieldsFromMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry_WOP(map_attribute_definition_boolean_showinsubjectentry *models.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry_WOP) {
	// insertion point for fields commit

	map_attribute_definition_boolean_showinsubjectentryDB.Name_Data.String = map_attribute_definition_boolean_showinsubjectentry.Name
	map_attribute_definition_boolean_showinsubjectentryDB.Name_Data.Valid = true

	map_attribute_definition_boolean_showinsubjectentryDB.Value_Data.Bool = map_attribute_definition_boolean_showinsubjectentry.Value
	map_attribute_definition_boolean_showinsubjectentryDB.Value_Data.Valid = true
}

// CopyBasicFieldsFromMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryWOP
func (map_attribute_definition_boolean_showinsubjectentryDB *Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB) CopyBasicFieldsFromMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryWOP(map_attribute_definition_boolean_showinsubjectentry *Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryWOP) {
	// insertion point for fields commit

	map_attribute_definition_boolean_showinsubjectentryDB.Name_Data.String = map_attribute_definition_boolean_showinsubjectentry.Name
	map_attribute_definition_boolean_showinsubjectentryDB.Name_Data.Valid = true

	map_attribute_definition_boolean_showinsubjectentryDB.Value_Data.Bool = map_attribute_definition_boolean_showinsubjectentry.Value
	map_attribute_definition_boolean_showinsubjectentryDB.Value_Data.Valid = true
}

// CopyBasicFieldsToMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry
func (map_attribute_definition_boolean_showinsubjectentryDB *Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB) CopyBasicFieldsToMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry(map_attribute_definition_boolean_showinsubjectentry *models.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry) {
	// insertion point for checkout of basic fields (back repo to stage)
	map_attribute_definition_boolean_showinsubjectentry.Name = map_attribute_definition_boolean_showinsubjectentryDB.Name_Data.String
	map_attribute_definition_boolean_showinsubjectentry.Value = map_attribute_definition_boolean_showinsubjectentryDB.Value_Data.Bool
}

// CopyBasicFieldsToMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry_WOP
func (map_attribute_definition_boolean_showinsubjectentryDB *Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB) CopyBasicFieldsToMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry_WOP(map_attribute_definition_boolean_showinsubjectentry *models.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry_WOP) {
	// insertion point for checkout of basic fields (back repo to stage)
	map_attribute_definition_boolean_showinsubjectentry.Name = map_attribute_definition_boolean_showinsubjectentryDB.Name_Data.String
	map_attribute_definition_boolean_showinsubjectentry.Value = map_attribute_definition_boolean_showinsubjectentryDB.Value_Data.Bool
}

// CopyBasicFieldsToMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryWOP
func (map_attribute_definition_boolean_showinsubjectentryDB *Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB) CopyBasicFieldsToMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryWOP(map_attribute_definition_boolean_showinsubjectentry *Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryWOP) {
	map_attribute_definition_boolean_showinsubjectentry.ID = int(map_attribute_definition_boolean_showinsubjectentryDB.ID)
	// insertion point for checkout of basic fields (back repo to stage)
	map_attribute_definition_boolean_showinsubjectentry.Name = map_attribute_definition_boolean_showinsubjectentryDB.Name_Data.String
	map_attribute_definition_boolean_showinsubjectentry.Value = map_attribute_definition_boolean_showinsubjectentryDB.Value_Data.Bool
}

// Backup generates a json file from a slice of all Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB instances in the backrepo
func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) Backup(dirPath string) {

	filename := filepath.Join(dirPath, "Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB.json")

	// organize the map into an array with increasing IDs, in order to have repoductible
	// backup file
	forBackup := make([]*Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB, 0)
	for _, map_attribute_definition_boolean_showinsubjectentryDB := range backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB {
		forBackup = append(forBackup, map_attribute_definition_boolean_showinsubjectentryDB)
	}

	sort.Slice(forBackup[:], func(i, j int) bool {
		return forBackup[i].ID < forBackup[j].ID
	})

	file, err := json.MarshalIndent(forBackup, "", " ")

	if err != nil {
		log.Fatal("Cannot json Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry ", filename, " ", err.Error())
	}

	err = ioutil.WriteFile(filename, file, 0644)
	if err != nil {
		log.Fatal("Cannot write the json Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry file", err.Error())
	}
}

// Backup generates a json file from a slice of all Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB instances in the backrepo
func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) BackupXL(file *xlsx.File) {

	// organize the map into an array with increasing IDs, in order to have repoductible
	// backup file
	forBackup := make([]*Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB, 0)
	for _, map_attribute_definition_boolean_showinsubjectentryDB := range backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB {
		forBackup = append(forBackup, map_attribute_definition_boolean_showinsubjectentryDB)
	}

	sort.Slice(forBackup[:], func(i, j int) bool {
		return forBackup[i].ID < forBackup[j].ID
	})

	sh, err := file.AddSheet("Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry")
	if err != nil {
		log.Fatal("Cannot add XL file", err.Error())
	}
	_ = sh

	row := sh.AddRow()
	row.WriteSlice(&Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry_Fields, -1)
	for _, map_attribute_definition_boolean_showinsubjectentryDB := range forBackup {

		var map_attribute_definition_boolean_showinsubjectentryWOP Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryWOP
		map_attribute_definition_boolean_showinsubjectentryDB.CopyBasicFieldsToMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryWOP(&map_attribute_definition_boolean_showinsubjectentryWOP)

		row := sh.AddRow()
		row.WriteStruct(&map_attribute_definition_boolean_showinsubjectentryWOP, -1)
	}
}

// RestoreXL from the "Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry" sheet all Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB instances
func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) RestoreXLPhaseOne(file *xlsx.File) {

	// resets the map
	BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryid_atBckpTime_newID = make(map[uint]uint)

	sh, ok := file.Sheet["Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry"]
	_ = sh
	if !ok {
		log.Fatal(errors.New("sheet not found"))
	}

	// log.Println("Max row is", sh.MaxRow)
	err := sh.ForEachRow(backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.rowVisitorMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry)
	if err != nil {
		log.Fatal("Err=", err)
	}
}

func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) rowVisitorMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry(row *xlsx.Row) error {

	log.Printf("row line %d\n", row.GetCoordinate())
	log.Println(row)

	// skip first line
	if row.GetCoordinate() > 0 {
		var map_attribute_definition_boolean_showinsubjectentryWOP Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryWOP
		row.ReadStruct(&map_attribute_definition_boolean_showinsubjectentryWOP)

		// add the unmarshalled struct to the stage
		map_attribute_definition_boolean_showinsubjectentryDB := new(Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB)
		map_attribute_definition_boolean_showinsubjectentryDB.CopyBasicFieldsFromMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryWOP(&map_attribute_definition_boolean_showinsubjectentryWOP)

		map_attribute_definition_boolean_showinsubjectentryDB_ID_atBackupTime := map_attribute_definition_boolean_showinsubjectentryDB.ID
		map_attribute_definition_boolean_showinsubjectentryDB.ID = 0
		_, err := backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.db.Create(map_attribute_definition_boolean_showinsubjectentryDB)
		if err != nil {
			log.Fatal(err)
		}
		backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB[map_attribute_definition_boolean_showinsubjectentryDB.ID] = map_attribute_definition_boolean_showinsubjectentryDB
		BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryid_atBckpTime_newID[map_attribute_definition_boolean_showinsubjectentryDB_ID_atBackupTime] = map_attribute_definition_boolean_showinsubjectentryDB.ID
	}
	return nil
}

// RestorePhaseOne read the file "Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB.json" in dirPath that stores an array
// of Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB and stores it in the database
// the map BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryid_atBckpTime_newID is updated accordingly
func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) RestorePhaseOne(dirPath string) {

	// resets the map
	BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryid_atBckpTime_newID = make(map[uint]uint)

	filename := filepath.Join(dirPath, "Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB.json")
	jsonFile, err := os.Open(filename)
	// if we os.Open returns an error then handle it
	if err != nil {
		log.Fatal("Cannot restore/open the json Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry file", filename, " ", err.Error())
	}

	// read our opened jsonFile as a byte array.
	byteValue, _ := ioutil.ReadAll(jsonFile)

	var forRestore []*Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB

	err = json.Unmarshal(byteValue, &forRestore)

	// fill up Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB
	for _, map_attribute_definition_boolean_showinsubjectentryDB := range forRestore {

		map_attribute_definition_boolean_showinsubjectentryDB_ID_atBackupTime := map_attribute_definition_boolean_showinsubjectentryDB.ID
		map_attribute_definition_boolean_showinsubjectentryDB.ID = 0
		_, err := backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.db.Create(map_attribute_definition_boolean_showinsubjectentryDB)
		if err != nil {
			log.Fatal(err)
		}
		backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB[map_attribute_definition_boolean_showinsubjectentryDB.ID] = map_attribute_definition_boolean_showinsubjectentryDB
		BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryid_atBckpTime_newID[map_attribute_definition_boolean_showinsubjectentryDB_ID_atBackupTime] = map_attribute_definition_boolean_showinsubjectentryDB.ID
	}

	if err != nil {
		log.Fatal("Cannot restore/unmarshall json Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry file", err.Error())
	}
}

// RestorePhaseTwo uses all map BackRepo<Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry>id_atBckpTime_newID
// to compute new index
func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) RestorePhaseTwo() {

	for _, map_attribute_definition_boolean_showinsubjectentryDB := range backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB {

		// next line of code is to avert unused variable compilation error
		_ = map_attribute_definition_boolean_showinsubjectentryDB

		// insertion point for reindexing pointers encoding
		// update databse with new index encoding
		db, _ := backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.db.Model(map_attribute_definition_boolean_showinsubjectentryDB)
		_, err := db.Updates(*map_attribute_definition_boolean_showinsubjectentryDB)
		if err != nil {
			log.Fatal(err)
		}
	}

}

// BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.ResetReversePointers commits all staged instances of Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry to the BackRepo
// Phase Two is the update of instance with the field in the database
func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) ResetReversePointers(backRepo *BackRepoStruct) (Error error) {

	for idx, map_attribute_definition_boolean_showinsubjectentry := range backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryPtr {
		backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.ResetReversePointersInstance(backRepo, idx, map_attribute_definition_boolean_showinsubjectentry)
	}

	return
}

func (backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry *BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryStruct) ResetReversePointersInstance(backRepo *BackRepoStruct, idx uint, map_attribute_definition_boolean_showinsubjectentry *models.Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry) (Error error) {

	// fetch matching map_attribute_definition_boolean_showinsubjectentryDB
	if map_attribute_definition_boolean_showinsubjectentryDB, ok := backRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntry.Map_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDBID_Map_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryDB[idx]; ok {
		_ = map_attribute_definition_boolean_showinsubjectentryDB // to avoid unused variable error if there are no reverse to reset

		// insertion point for reverse pointers reset
		// end of insertion point for reverse pointers reset
	}

	return
}

// this field is used during the restauration process.
// it stores the ID at the backup time and is used for renumbering
var BackRepoMap_ATTRIBUTE_DEFINITION_BOOLEAN_ShowInSubjectEntryid_atBckpTime_newID map[uint]uint
